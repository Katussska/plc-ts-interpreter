// Generated from src/grammar/PLC.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class PLCLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly ID = 20;
	public static readonly INT = 21;
	public static readonly FLOAT = 22;
	public static readonly BOOL = 23;
	public static readonly WS = 24;
	public static readonly NEWLINE = 25;
	public static readonly COMMENT = 26;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "ID", "INT", "FLOAT", "BOOL", "WS", "NEWLINE", "COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'='", "'let'", "':'", "'('", "','", "')'", "'if'", "'then'", 
		"'else'", "'end'", "'while'", "'do'", "'*'", "'/'", "'+'", "'-'", "'int'", 
		"'float'", "'bool'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "ID", 
		"INT", "FLOAT", "BOOL", "WS", "NEWLINE", "COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(PLCLexer._LITERAL_NAMES, PLCLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return PLCLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(PLCLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "PLC.g4"; }

	// @Override
	public get ruleNames(): string[] { return PLCLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return PLCLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return PLCLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return PLCLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1C\xB0\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t" +
		"\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x15\x03\x15\x07\x15y\n\x15\f\x15\x0E\x15|\v\x15\x03\x16" +
		"\x06\x16\x7F\n\x16\r\x16\x0E\x16\x80\x03\x17\x06\x17\x84\n\x17\r\x17\x0E" +
		"\x17\x85\x03\x17\x03\x17\x06\x17\x8A\n\x17\r\x17\x0E\x17\x8B\x03\x18\x03" +
		"\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x05\x18\x97" +
		"\n\x18\x03\x19\x06\x19\x9A\n\x19\r\x19\x0E\x19\x9B\x03\x19\x03\x19\x03" +
		"\x1A\x05\x1A\xA1\n\x1A\x03\x1A\x06\x1A\xA4\n\x1A\r\x1A\x0E\x1A\xA5\x03" +
		"\x1B\x03\x1B\x07\x1B\xAA\n\x1B\f\x1B\x0E\x1B\xAD\v\x1B\x03\x1B\x03\x1B" +
		"\x02\x02\x02\x1C\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C\x03" +
		"\x02\x07\x05\x02C\\aac|\x06\x022;C\\aac|\x03\x022;\x04\x02\v\v\"\"\x04" +
		"\x02\f\f\x0F\x0F\x02\xB8\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03" +
		"\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x02" +
		"3\x03\x02\x02\x02\x025\x03\x02\x02\x02\x037\x03\x02\x02\x02\x059\x03\x02" +
		"\x02\x02\x07=\x03\x02\x02\x02\t?\x03\x02\x02\x02\vA\x03\x02\x02\x02\r" +
		"C\x03\x02\x02\x02\x0FE\x03\x02\x02\x02\x11H\x03\x02\x02\x02\x13M\x03\x02" +
		"\x02\x02\x15R\x03\x02\x02\x02\x17V\x03\x02\x02\x02\x19\\\x03\x02\x02\x02" +
		"\x1B_\x03\x02\x02\x02\x1Da\x03\x02\x02\x02\x1Fc\x03\x02\x02\x02!e\x03" +
		"\x02\x02\x02#g\x03\x02\x02\x02%k\x03\x02\x02\x02\'q\x03\x02\x02\x02)v" +
		"\x03\x02\x02\x02+~\x03\x02\x02\x02-\x83\x03\x02\x02\x02/\x96\x03\x02\x02" +
		"\x021\x99\x03\x02\x02\x023\xA3\x03\x02\x02\x025\xA7\x03\x02\x02\x0278" +
		"\x07?\x02\x028\x04\x03\x02\x02\x029:\x07n\x02\x02:;\x07g\x02\x02;<\x07" +
		"v\x02\x02<\x06\x03\x02\x02\x02=>\x07<\x02\x02>\b\x03\x02\x02\x02?@\x07" +
		"*\x02\x02@\n\x03\x02\x02\x02AB\x07.\x02\x02B\f\x03\x02\x02\x02CD\x07+" +
		"\x02\x02D\x0E\x03\x02\x02\x02EF\x07k\x02\x02FG\x07h\x02\x02G\x10\x03\x02" +
		"\x02\x02HI\x07v\x02\x02IJ\x07j\x02\x02JK\x07g\x02\x02KL\x07p\x02\x02L" +
		"\x12\x03\x02\x02\x02MN\x07g\x02\x02NO\x07n\x02\x02OP\x07u\x02\x02PQ\x07" +
		"g\x02\x02Q\x14\x03\x02\x02\x02RS\x07g\x02\x02ST\x07p\x02\x02TU\x07f\x02" +
		"\x02U\x16\x03\x02\x02\x02VW\x07y\x02\x02WX\x07j\x02\x02XY\x07k\x02\x02" +
		"YZ\x07n\x02\x02Z[\x07g\x02\x02[\x18\x03\x02\x02\x02\\]\x07f\x02\x02]^" +
		"\x07q\x02\x02^\x1A\x03\x02\x02\x02_`\x07,\x02\x02`\x1C\x03\x02\x02\x02" +
		"ab\x071\x02\x02b\x1E\x03\x02\x02\x02cd\x07-\x02\x02d \x03\x02\x02\x02" +
		"ef\x07/\x02\x02f\"\x03\x02\x02\x02gh\x07k\x02\x02hi\x07p\x02\x02ij\x07" +
		"v\x02\x02j$\x03\x02\x02\x02kl\x07h\x02\x02lm\x07n\x02\x02mn\x07q\x02\x02" +
		"no\x07c\x02\x02op\x07v\x02\x02p&\x03\x02\x02\x02qr\x07d\x02\x02rs\x07" +
		"q\x02\x02st\x07q\x02\x02tu\x07n\x02\x02u(\x03\x02\x02\x02vz\t\x02\x02" +
		"\x02wy\t\x03\x02\x02xw\x03\x02\x02\x02y|\x03\x02\x02\x02zx\x03\x02\x02" +
		"\x02z{\x03\x02\x02\x02{*\x03\x02\x02\x02|z\x03\x02\x02\x02}\x7F\t\x04" +
		"\x02\x02~}\x03\x02\x02\x02\x7F\x80\x03\x02\x02\x02\x80~\x03\x02\x02\x02" +
		"\x80\x81\x03\x02\x02\x02\x81,\x03\x02\x02\x02\x82\x84\t\x04\x02\x02\x83" +
		"\x82\x03\x02\x02\x02\x84\x85\x03\x02\x02\x02\x85\x83\x03\x02\x02\x02\x85" +
		"\x86\x03\x02\x02\x02\x86\x87\x03\x02\x02\x02\x87\x89\x070\x02\x02\x88" +
		"\x8A\t\x04\x02\x02\x89\x88\x03\x02\x02\x02\x8A\x8B\x03\x02\x02\x02\x8B" +
		"\x89\x03\x02\x02\x02\x8B\x8C\x03\x02\x02\x02\x8C.\x03\x02\x02\x02\x8D" +
		"\x8E\x07v\x02\x02\x8E\x8F\x07t\x02\x02\x8F\x90\x07w\x02\x02\x90\x97\x07" +
		"g\x02\x02\x91\x92\x07h\x02\x02\x92\x93\x07c\x02\x02\x93\x94\x07n\x02\x02" +
		"\x94\x95\x07u\x02\x02\x95\x97\x07g\x02\x02\x96\x8D\x03\x02\x02\x02\x96" +
		"\x91\x03\x02\x02\x02\x970\x03\x02\x02\x02\x98\x9A\t\x05\x02\x02\x99\x98" +
		"\x03\x02\x02\x02\x9A\x9B\x03\x02\x02\x02\x9B\x99\x03\x02\x02\x02\x9B\x9C" +
		"\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9D\x9E\b\x19\x02\x02\x9E2\x03" +
		"\x02\x02\x02\x9F\xA1\x07\x0F\x02\x02\xA0\x9F\x03\x02\x02\x02\xA0\xA1\x03" +
		"\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA2\xA4\x07\f\x02\x02\xA3\xA0\x03" +
		"\x02\x02\x02\xA4\xA5\x03\x02\x02\x02\xA5\xA3\x03\x02\x02\x02\xA5\xA6\x03" +
		"\x02\x02\x02\xA64\x03\x02\x02\x02\xA7\xAB\x07%\x02\x02\xA8\xAA\n\x06\x02" +
		"\x02\xA9\xA8\x03\x02\x02\x02\xAA\xAD\x03\x02\x02\x02\xAB\xA9\x03\x02\x02" +
		"\x02\xAB\xAC\x03\x02\x02\x02\xAC\xAE\x03\x02\x02\x02\xAD\xAB\x03\x02\x02" +
		"\x02\xAE\xAF\b\x1B\x02\x02\xAF6\x03\x02\x02\x02\f\x02z\x80\x85\x8B\x96" +
		"\x9B\xA0\xA5\xAB\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!PLCLexer.__ATN) {
			PLCLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(PLCLexer._serializedATN));
		}

		return PLCLexer.__ATN;
	}

}

